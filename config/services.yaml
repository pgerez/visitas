# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    mailer_user: 'something@example.com'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    application_tools.type.dependent_filtered_entity:
        public: true
        class: App\Application\ToolsBundle\Form\Type\DependentFilteredEntityType
        arguments: ["@doctrine", "@property_accessor"]
        tags:
            - { name: form.type, alias: apptools_dependent_filtered_entity }
       
    application_tools.dependent_filtered_entity_subscriber:
        public: true
        class: App\Application\ToolsBundle\Form\EventListener\DependentFilteredEntitySubscriber
        arguments: ["@property_accessor"]
        tags:
            - { name: form.type, alias: apptools_dependent_filtered_entity_subscriber } 


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.afiliados:
        class: App\Admin\AfiliadosAdmin
        arguments: [~, App\Entity\Afiliados, App\Controller\AfiliadosAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Afiliados }
        public: true

    admin.sucursales:
        class: App\Admin\SucursalesAdmin
        arguments: [~, App\Entity\Sucursales, App\Controller\SucursalesAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Sucursales }
        public: true

    admin.profesionales:
        class: App\Admin\ProfesionalesAdmin
        arguments: [~, App\Entity\Profesionales, App\Controller\ProfesionalesAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Profesionales }
        public: true

    admin.profesionales_equipo_trabajo:
        class: App\Admin\ProfesionalesEquipoTrabajoAdmin
        arguments: [~, App\Entity\ProfesionalesEquipoTrabajo, App\Controller\ProfesionalesEquipoTrabajoAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: ProfesionalesEquipoTrabajo }
        public: true

    admin.equipo_trabajo:
        class: App\Admin\EquipoTrabajoAdmin
        arguments: [~, App\Entity\EquipoTrabajo, App\Controller\EquipoTrabajoAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: EquipoTrabajo }
        public: true

    admin.ordenprestacion:
        class: App\Admin\OrdenprestacionAdmin
        arguments: [~, App\Entity\Ordenprestacion, App\Controller\OrdenprestacionAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Ordenprestacion }
        public: true

    admin.visitas:
        class: App\Admin\VisitasAdmin
        arguments: [~, App\Entity\Visitas, App\Controller\VisitasAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Visitas }
        public: true

    admin.afiliadosestados:
        class: App\Admin\AfiliadosestadosAdmin
        arguments: [~, App\Entity\Afiliadosestados, App\Controller\AfiliadosestadosAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Afiliadosestados }
        public: true

    admin.profesiones:
        class: App\Admin\ProfesionesAdmin
        arguments: [~, App\Entity\Profesiones, App\Controller\ProfesionesAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Profesiones }
        public: true
